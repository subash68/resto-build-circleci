syntax = "proto3";
option go_package = "onboard/";
package onboard;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-swagger/options/annotations.proto";

//definition for swagger support
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "ATE Onboarding Service";
    version: "1.0";
    contact: {
      name: "ATE onboarding service project";
      url: "hyperl.io";
      email: "subash@hyperl.io";
    };
  };
  schemes: HTTP;
  consumes: "application/json";
  produces: "applications/json";
  responses: {
    key: "404";
    value: {
      description: "Returned when the resource does not exist.";
      schema: {
        json_schema: {
          type: STRING;
        }
      }
    }
  }
};

service OnboardService {
  rpc login(LoginUserRequest) returns (LoginUserResponse) {
    option (google.api.http) = {
      post: "/login"
      body: "*"
    };
  }

  rpc register(RegisterUserRequest) returns (RegisterUserResponse) {
    option (google.api.http) = {
      post: "/register"
      body: "*"
    };
  }

  rpc notificationRegister(NotificationUserRequest) returns (NotificationUserResponse) {
    option(google.api.http) = {
      post: "/notificationregister"
      body: "*"
    };
  }
}

message voidNoParams {}



message ResponseStatus {
  bool status = 1;
  string message = 2;
}

message NotificationUserRequest {
  string api = 1;
  int64 id = 2;
  string notificationToken = 3;
}

message NotificationUserResponse {
  string api = 1;
  int64 userId = 2;
  ResponseStatus error = 3;
}

message User {
  int64 id = 1;
  string fullname = 2;
  string email = 3;
  string phone = 4;
  string password = 5;
  int32 type = 7;
  google.protobuf.Timestamp createAt = 8;
  google.protobuf.Timestamp updatedAt = 9;
}

message RegisterUserRequest {
  string api = 1;
  User user = 2;
}

message RegisterUserResponse {
  string api = 1;
  int64 userId = 2;
  ResponseStatus error = 3;
}

message LoginUserRequest {
  string api = 1;
  string email = 2;
  string password = 3;
}

message UserResponse {
  int64 id = 1;
  string fullname = 2;
  string email = 3;
  int32 type = 4;
}

message LoginUserResponse {
  string api = 1;
  string token = 2;
  UserResponse user = 3;
  ResponseStatus error = 4;
}

message ActivateUserRequest {}
